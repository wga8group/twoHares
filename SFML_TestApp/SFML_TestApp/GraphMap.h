#pragma once
#include "CustomLibrary.h"

struct GraphCoor{
	int x;
	int y;
};


int GraphMap[25][25] = { 
{ 0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }, 
{ 1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0 },
};


bool inTops(float x, float y, float sqeStartX, float sqeStartY, float sqeSizeX, float sqeSizeY) {

	if ((x >= sqeStartX) && (x < (sqeStartX + sqeSizeX))) {
		if ((y >= sqeStartY) && (y < (sqeStartY + sqeSizeY))) {
			return true;
		}
	}

	return false;

}

void move(CharacterMan player, float time, int tempX, int tempY) {
	//std::cout << "move";
	float distance = 0;
	distance = sqrt((tempX - player.x)*(tempX - player.x) + (tempY - player.y)*(tempY - player.y));//считаем дистанцию (длину от точки А до точки Б). формула длины вектора
	if (distance > 2) {//этим условием убираем дергание во время конечной позиции спрайта
		player.x += 0.1*time*(tempX - player.x) / distance;//идем по иксу с помощью вектора нормали
		player.y += 0.1*time*(tempY - player.y) / distance;//идем по игреку так же
	}
}